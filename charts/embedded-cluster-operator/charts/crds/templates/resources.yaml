apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: configs.embeddedcluster.replicated.com
spec:
  group: embeddedcluster.replicated.com
  names:
    kind: Config
    listKind: ConfigList
    plural: configs
    singular: config
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Config is the Schema for the configs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConfigSpec defines the desired state of Config
            properties:
              roles:
                description: Roles is the various roles in the cluster.
                properties:
                  controller:
                    description: NodeRole is the role of a node in the cluster.
                    properties:
                      description:
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      name:
                        type: string
                      nodeCount:
                        description: NodeCount holds a series of rules for a given node role.
                        properties:
                          range:
                            description: NodeRange contains a min and max or only one of them (conflicts with Values).
                            properties:
                              max:
                                description: Max is the maximum number of nodes.
                                type: integer
                              min:
                                description: Min is the minimum number of nodes.
                                type: integer
                            type: object
                          values:
                            description: Values holds a list of allowed node counts.
                            items:
                              type: integer
                            type: array
                        type: object
                    type: object
                  custom:
                    items:
                      description: NodeRole is the role of a node in the cluster.
                      properties:
                        description:
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        name:
                          type: string
                        nodeCount:
                          description: NodeCount holds a series of rules for a given node role.
                          properties:
                            range:
                              description: NodeRange contains a min and max or only one of them (conflicts with Values).
                              properties:
                                max:
                                  description: Max is the maximum number of nodes.
                                  type: integer
                                min:
                                  description: Min is the minimum number of nodes.
                                  type: integer
                              type: object
                            values:
                              description: Values holds a list of allowed node counts.
                              items:
                                type: integer
                              type: array
                          type: object
                      type: object
                    type: array
                type: object
              unsupportedOverrides:
                description: UnsupportedOverrides holds the config overrides used to configure the cluster.
                properties:
                  k0s:
                    description: K0s holds the overrides used to configure k0s. These overrides are merged on top of the default k0s configuration. As the data layout inside this configuration is very dynamic we have chosen to use a string here.
                    type: string
                type: object
              version:
                type: string
            type: object
          status:
            description: ConfigStatus defines the observed state of Config
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: installations.embeddedcluster.replicated.com
spec:
  group: embeddedcluster.replicated.com
  names:
    kind: Installation
    listKind: InstallationList
    plural: installations
    singular: installation
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: State of the installation
      jsonPath: .status.state
      name: State
      type: string
    - description: Installer version
      jsonPath: .spec.config.version
      name: InstallerVersion
      type: string
    - description: Creation time of the installation
      jsonPath: .metadata.creationTimestamp
      name: CreatedAt
      type: string
    - description: Age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Installation is the Schema for the installations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstallationSpec defines the desired state of Installation.
            properties:
              airGap:
                description: AirGap indicates if the installation is airgapped.
                type: boolean
              clusterID:
                description: ClusterID holds the cluster, generated during the installation.
                type: string
              config:
                description: Config holds the configuration used at installation time.
                properties:
                  roles:
                    description: Roles is the various roles in the cluster.
                    properties:
                      controller:
                        description: NodeRole is the role of a node in the cluster.
                        properties:
                          description:
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                          name:
                            type: string
                          nodeCount:
                            description: NodeCount holds a series of rules for a given node role.
                            properties:
                              range:
                                description: NodeRange contains a min and max or only one of them (conflicts with Values).
                                properties:
                                  max:
                                    description: Max is the maximum number of nodes.
                                    type: integer
                                  min:
                                    description: Min is the minimum number of nodes.
                                    type: integer
                                type: object
                              values:
                                description: Values holds a list of allowed node counts.
                                items:
                                  type: integer
                                type: array
                            type: object
                        type: object
                      custom:
                        items:
                          description: NodeRole is the role of a node in the cluster.
                          properties:
                            description:
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                            nodeCount:
                              description: NodeCount holds a series of rules for a given node role.
                              properties:
                                range:
                                  description: NodeRange contains a min and max or only one of them (conflicts with Values).
                                  properties:
                                    max:
                                      description: Max is the maximum number of nodes.
                                      type: integer
                                    min:
                                      description: Min is the minimum number of nodes.
                                      type: integer
                                  type: object
                                values:
                                  description: Values holds a list of allowed node counts.
                                  items:
                                    type: integer
                                  type: array
                              type: object
                          type: object
                        type: array
                    type: object
                  unsupportedOverrides:
                    description: UnsupportedOverrides holds the config overrides used to configure the cluster.
                    properties:
                      k0s:
                        description: K0s holds the overrides used to configure k0s. These overrides are merged on top of the default k0s configuration. As the data layout inside this configuration is very dynamic we have chosen to use a string here.
                        type: string
                    type: object
                  version:
                    type: string
                type: object
              endUserK0sConfigOverrides:
                description: EndUserK0sConfigOverrides holds the end user k0s config overrides used at installation time.
                type: string
              metricsBaseURL:
                description: MetricsBaseURL holds the base URL for the metrics server.
                type: string
              nodesStaticK0sConfig:
                description: NodesStaticK0sConfig holds the k0s configuration we deem static across all nodes in a given installation.
                properties:
                  api:
                    description: APISpec defines the settings for the K0s API
                    properties:
                      address:
                        description: Local address on which to bind an API
                        type: string
                      externalAddress:
                        description: The loadbalancer address (for k0s controllers running behind a loadbalancer)
                        type: string
                      extraArgs:
                        additionalProperties:
                          type: string
                        description: Map of key-values (strings) for any extra arguments to pass down to Kubernetes api-server process
                        type: object
                      k0sApiPort:
                        description: 'Custom port for k0s-api server to listen on (default: 9443)'
                        type: integer
                      port:
                        description: 'Custom port for kube-api server to listen on (default: 6443)'
                        type: integer
                      sans:
                        description: List of additional addresses to push to API servers serving the certificate
                        items:
                          type: string
                        type: array
                    type: object
                  storage:
                    description: StorageSpec defines the storage related config options
                    properties:
                      etcd:
                        description: EtcdConfig defines etcd related config options
                        properties:
                          externalCluster:
                            description: ExternalCluster defines external etcd cluster related config options
                            properties:
                              caFile:
                                description: CaFile is the host path to a file with CA certificate
                                type: string
                              clientCertFile:
                                description: ClientCertFile is the host path to a file with TLS certificate for etcd client
                                type: string
                              clientKeyFile:
                                description: ClientKeyFile is the host path to a file with TLS key for etcd client
                                type: string
                              endpoints:
                                description: Endpoints of external etcd cluster used to connect by k0s
                                items:
                                  type: string
                                type: array
                              etcdPrefix:
                                description: EtcdPrefix is a prefix to prepend to all resource paths in etcd
                                type: string
                            type: object
                          extraArgs:
                            additionalProperties:
                              type: string
                            description: Map of key-values (strings) for any extra arguments you want to pass down to the etcd process
                            type: object
                          peerAddress:
                            description: Node address used for etcd cluster peering
                            type: string
                        type: object
                      kine:
                        description: KineConfig defines the Kine related config options
                        properties:
                          dataSource:
                            description: kine datasource URL
                            type: string
                        type: object
                      type:
                        description: Type of the data store (valid values:etcd or kine)
                        type: string
                    type: object
                required:
                - api
                - storage
                type: object
            required:
            - airGap
            type: object
          status:
            description: InstallationStatus defines the observed state of Installation
            properties:
              nodesStatus:
                description: NodesStatus is a list of nodes and their status.
                items:
                  description: NodeStatus is used to keep track of the status of a cluster node, we only hold its name and a hash of the node's status. Whenever the node status change we will be able to capture it and update the hash.
                  properties:
                    hash:
                      type: string
                    name:
                      type: string
                  required:
                  - hash
                  - name
                  type: object
                type: array
              reason:
                description: Reason holds the reason for the current state.
                type: string
              state:
                description: State holds the current state of the installation.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
